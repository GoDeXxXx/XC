import './App.css';
import { useState } from 'react';

const questions = [
  {
    questionText: "–ö–æ–≥–æ –≤—ã–±–µ—Ä–µ—Ç –î–∞–ª–≥–∞—Ç ?",
    answerOptions: [
      {answerTexst: "–î–∞—à—É –≥–æ–ª—É–±–µ–≤—É", isCorrect: false},
      {answerTexst: "–†–∞–π–ª–∏ –†–∏–¥", isCorrect: false},
      {answerTexst: "–£—Å–∞—Ç—É—é –ú–∞–¥–∏–Ω—É", isCorrect: true},
      {answerTexst: "–ü–æ—Ç–Ω—É—é –∞—Ä–º—è–Ω–∫—É –¥—ã—Ä—è–≤—É—é —Ç–µ—Ç–∫—É", isCorrect: false},
    ]
  },
  {
    questionText: "–ö—Ç–æ –ü–æ—Ä–∞–¥–∏–ª —á–µ–ª–æ–≤–µ—á–µ—Å—Ç–≤–æ ?",
    answerOptions: [
      {answerTexst: "–ë–æ–≥", isCorrect: false},
      {answerTexst: "–ê–ª–ª–∞—Ö", isCorrect: false},
      {answerTexst: "–ê–¥–∞–º –∏ –ï–≤–∞", isCorrect: false},
      {answerTexst: "–ñ–µ–Ω—è", isCorrect: true},
    ]
  },
  {
    questionText: "–°–∞–º—ã–π —É–∂–∞—Å–Ω—ã–π –∑–∞–ø–∞—Ö –≤ –∏—Å—Ç–æ—Ä–∏–∏ –º–∏—Ä–∞ ?",
    answerOptions: [
      {answerTexst: "H2S", isCorrect: false},
      {answerTexst: "–°—Ç—Ä–∞—É—Å–∏–Ω—ã–π –ú–∞–∫—Å—É–¥–∞", isCorrect: true},
      {answerTexst: "–ü–æ—Ç–Ω—ã–π –†–æ–±–µ—Ä—Ç–∞", isCorrect: false},
      {answerTexst: "–ù–æ—Å–æ—á–Ω—ã–π –∞–Ω—Ç–æ–Ω–∞", isCorrect: false},
    ]
  },
  {
    questionText: "–ö–∞–∫–æ–π –∞–π—Ñ–æ–Ω –ø–æ–¥–∞—Ä—è—Ç –ú–∞–∫—Å—É–¥—É ?",
    answerOptions: [
      {answerTexst: "11", isCorrect: false},
      {answerTexst: "12", isCorrect: false},
      {answerTexst: "13", isCorrect: false},
      {answerTexst: "–ï–≥–æ —Å–Ω–æ–≤–∞ –Ω–∞–µ–±–∞–ª–∞ –º–∞–º–∞—à–∞", isCorrect: true},
    ]
  }
]


function App() {

  const [currentQuestion, setCurrentQuestion] = useState(0);
  const [score, setScore] = useState(0);
  const [showScore, setShowScore] = useState(false);

  const handleAnswerOptionClic = (isCorrect) => {
    if(isCorrect){
      setScore(score + 1)
    }

    const nextQuestion = currentQuestion + 1;

    if(nextQuestion < questions.length){
      setCurrentQuestion(nextQuestion)
    } else {
      setShowScore(true)
    }
  }

  const reactions = ["üò°", "üòï", "üòÅ", "üéâ", "üèÜ"]

  const FindReaction = (score) => {
    for(let i = 0; i < questions.length + 1; i++){
      if (score == i) return reactions[i];
    }
  }

  return (
    <div className="app"> 
      {
        showScore 
        ? <div className="section_score">
            <div>–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ {score} –∏–∑ {questions.length} <br /> {FindReaction(score)}</div>
          </div>
        : <div className="quizz">
            <div className="question_section">
              <div className="question_count">
                <span>–í–æ–ø—Ä–æ—Å {currentQuestion +  1}</span> / {questions.length}
              </div>
              <div className="question_text">{questions[currentQuestion].questionText}</div>
            </div>
            <div className="answer_section">
              {questions[currentQuestion].answerOptions.map(
                item => (
                <button 
                onClick={() => {handleAnswerOptionClic(item.isCorrect)}}
                >{item.answerTexst}</button>
              )
              )}
            </div>        
          </div>
      }
    </div>
  );
}

export default App;
